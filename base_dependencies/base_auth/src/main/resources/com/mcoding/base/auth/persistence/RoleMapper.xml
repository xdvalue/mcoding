<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcoding.base.auth.persistence.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.mcoding.base.auth.bean.Role" >
    <id column="roleId" property="roleId" jdbcType="INTEGER" />
    <result column="roleName" property="roleName" jdbcType="VARCHAR" />
    <result column="roleLevel" property="roleLevel" jdbcType="INTEGER" />
    <result column="roleCode" property="roleCode" jdbcType="VARCHAR" />
    <result column="createUserId" property="createUserId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    roleId, roleName, roleLevel, roleCode, createUserId, createTime, updateTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mcoding.base.auth.bean.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_base_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_base_role
    where roleId = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_base_role
    where roleId = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcoding.base.auth.bean.RoleExample" >
    delete from t_base_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcoding.base.auth.bean.Role" useGeneratedKeys="true" keyProperty="roleId" >
    insert into t_base_role (roleName, roleLevel, roleCode, 
      createUserId, createTime, updateTime
      )
    values (#{roleName,jdbcType=VARCHAR}, #{roleLevel,jdbcType=INTEGER}, 
      #{roleCode,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mcoding.base.auth.bean.Role" useGeneratedKeys="true" keyProperty="roleId" >
    insert into t_base_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleName != null" >
        roleName,
      </if>
      <if test="roleLevel != null" >
        roleLevel,
      </if>
      <if test="roleCode != null" >
        roleCode,
      </if>
      <if test="createUserId != null" >
        createUserId,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null" >
        #{roleLevel,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null" >
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcoding.base.auth.bean.RoleExample" resultType="java.lang.Integer" >
    select count(*) from t_base_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_base_role
    <set >
      <if test="record.roleId != null" >
        roleId = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null" >
        roleName = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleLevel != null" >
        roleLevel = #{record.roleLevel,jdbcType=INTEGER},
      </if>
      <if test="record.roleCode != null" >
        roleCode = #{record.roleCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        createUserId = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_base_role
    set roleId = #{record.roleId,jdbcType=INTEGER},
      roleName = #{record.roleName,jdbcType=VARCHAR},
      roleLevel = #{record.roleLevel,jdbcType=INTEGER},
      roleCode = #{record.roleCode,jdbcType=VARCHAR},
      createUserId = #{record.createUserId,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcoding.base.auth.bean.Role" >
    update t_base_role
    <set >
      <if test="roleName != null" >
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleLevel != null" >
        roleLevel = #{roleLevel,jdbcType=INTEGER},
      </if>
      <if test="roleCode != null" >
        roleCode = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        createUserId = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where roleId = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcoding.base.auth.bean.Role" >
    update t_base_role
    set roleName = #{roleName,jdbcType=VARCHAR},
      roleLevel = #{roleLevel,jdbcType=INTEGER},
      roleCode = #{roleCode,jdbcType=VARCHAR},
      createUserId = #{createUserId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where roleId = #{roleId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mcoding.base.auth.bean.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_base_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="queryUserOwnAndCreateRoles" parameterType="int" resultType="com.mcoding.base.auth.bean.Role">
        select * from t_base_role where createUserId = #{value} or roleId in (select roleId from t_base_user_role where userId = #{value})
  </select>
  <select id="queryRoleByPage" parameterType="map" resultType="com.mcoding.base.auth.bean.Role">
      select r.*, u.nickName from t_base_role r left join t_base_user u on r.createUserId = u.userId
        <if test="userId != null and userId != ''">
            where r.createUserId = #{userId} or r.roleId in (select roleId from t_base_user_role where userId = #{userId})
        </if>
  </select>
  <select id="queryUserRolesByUserId" parameterType="int" resultType="com.mcoding.base.auth.bean.Role">
        select * from t_base_role where roleId in (select roleId from t_base_user_role where userId = #{value})
      /*  select sr.* from
        (select * from t_base_user_role ur where ur.userId=#{value}) ur2
        left join
        t_base_role sr
        on sr.roleId = ur2.roleId*/
    </select>
</mapper>