<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcoding.base.auth.persistence.RoleRightMapper" >
  <resultMap id="BaseResultMap" type="com.mcoding.base.auth.bean.RoleRight" >
    <result column="roleId" property="roleId" jdbcType="INTEGER" />
    <result column="menuId" property="menuId" jdbcType="INTEGER" />
    <result column="operId" property="operId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    roleId, menuId, operId, createTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mcoding.base.auth.bean.RoleRightExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_base_role_right
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.mcoding.base.auth.bean.RoleRightExample" >
    delete from t_base_role_right
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcoding.base.auth.bean.RoleRight" >
    insert into t_base_role_right (roleId, menuId, operId, 
      createTime)
    values (#{roleId,jdbcType=INTEGER}, #{menuId,jdbcType=INTEGER}, #{operId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mcoding.base.auth.bean.RoleRight" >
    insert into t_base_role_right
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        roleId,
      </if>
      <if test="menuId != null" >
        menuId,
      </if>
      <if test="operId != null" >
        operId,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="operId != null" >
        #{operId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcoding.base.auth.bean.RoleRightExample" resultType="java.lang.Integer" >
    select count(*) from t_base_role_right
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_base_role_right
    <set >
      <if test="record.roleId != null" >
        roleId = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.menuId != null" >
        menuId = #{record.menuId,jdbcType=INTEGER},
      </if>
      <if test="record.operId != null" >
        operId = #{record.operId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_base_role_right
    set roleId = #{record.roleId,jdbcType=INTEGER},
      menuId = #{record.menuId,jdbcType=INTEGER},
      operId = #{record.operId,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mcoding.base.auth.bean.RoleRightExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_base_role_right
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="queryOperIdsByRoleIds" parameterType="list" resultType="integer">
        select distinct operId from t_base_role_right where roleId in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
  <select id="queryUserRightInfo" parameterType="string" resultType="com.mcoding.base.auth.bean.RoleRight">
        select a.*, op.operName, op.operCode from
        (
        select xr.*, sm.menuName, sm.menuCode from
        ( select * from t_base_role_right where roleId = #{value} ) xr
        left join t_base_menu sm on xr.menuId = sm.menuId
        ) a
        left join t_base_operator op on a.operId = op.operId
    </select>
</mapper>