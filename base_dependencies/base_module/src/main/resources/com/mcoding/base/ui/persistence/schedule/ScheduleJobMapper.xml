<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mcoding.base.ui.persistence.schedule.ScheduleJobMapper" >
  <resultMap id="BaseResultMap" type="com.mcoding.base.ui.bean.schedule.ScheduleJob" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_code" property="jobCode" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="job_class" property="jobClass" jdbcType="VARCHAR" />
    <result column="job_method" property="jobMethod" jdbcType="VARCHAR" />
    <result column="job_state" property="jobState" jdbcType="INTEGER" />
    <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR" />
    <result column="is_enable" property="isEnable" jdbcType="INTEGER" />
    <result column="is_concurrent" property="isConcurrent" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, job_name, job_code, description, job_class, job_method, job_state, cron_expression, 
    is_enable, is_concurrent, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mcoding.base.ui.bean.schedule.ScheduleJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_base_schedule_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_base_schedule_job
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_base_schedule_job
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mcoding.base.ui.bean.schedule.ScheduleJobExample" >
    delete from t_base_schedule_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mcoding.base.ui.bean.schedule.ScheduleJob" useGeneratedKeys="true" keyProperty="id" >
    insert into t_base_schedule_job (job_name, job_code, description, 
      job_class, job_method, job_state, 
      cron_expression, is_enable, is_concurrent, 
      create_time, update_time)
    values (#{jobName,jdbcType=VARCHAR}, #{jobCode,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{jobClass,jdbcType=VARCHAR}, #{jobMethod,jdbcType=VARCHAR}, #{jobState,jdbcType=INTEGER}, 
      #{cronExpression,jdbcType=VARCHAR}, #{isEnable,jdbcType=INTEGER}, #{isConcurrent,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mcoding.base.ui.bean.schedule.ScheduleJob" useGeneratedKeys="true" keyProperty="id" >
    insert into t_base_schedule_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobName != null" >
        job_name,
      </if>
      <if test="jobCode != null" >
        job_code,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="jobClass != null" >
        job_class,
      </if>
      <if test="jobMethod != null" >
        job_method,
      </if>
      <if test="jobState != null" >
        job_state,
      </if>
      <if test="cronExpression != null" >
        cron_expression,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="isConcurrent != null" >
        is_concurrent,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobCode != null" >
        #{jobCode,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null" >
        #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="jobMethod != null" >
        #{jobMethod,jdbcType=VARCHAR},
      </if>
      <if test="jobState != null" >
        #{jobState,jdbcType=INTEGER},
      </if>
      <if test="cronExpression != null" >
        #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="isConcurrent != null" >
        #{isConcurrent,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mcoding.base.ui.bean.schedule.ScheduleJobExample" resultType="java.lang.Integer" >
    select count(*) from t_base_schedule_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_base_schedule_job
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.jobName != null" >
        job_name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobCode != null" >
        job_code = #{record.jobCode,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.jobClass != null" >
        job_class = #{record.jobClass,jdbcType=VARCHAR},
      </if>
      <if test="record.jobMethod != null" >
        job_method = #{record.jobMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.jobState != null" >
        job_state = #{record.jobState,jdbcType=INTEGER},
      </if>
      <if test="record.cronExpression != null" >
        cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null" >
        is_enable = #{record.isEnable,jdbcType=INTEGER},
      </if>
      <if test="record.isConcurrent != null" >
        is_concurrent = #{record.isConcurrent,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_base_schedule_job
    set id = #{record.id,jdbcType=INTEGER},
      job_name = #{record.jobName,jdbcType=VARCHAR},
      job_code = #{record.jobCode,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      job_class = #{record.jobClass,jdbcType=VARCHAR},
      job_method = #{record.jobMethod,jdbcType=VARCHAR},
      job_state = #{record.jobState,jdbcType=INTEGER},
      cron_expression = #{record.cronExpression,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=INTEGER},
      is_concurrent = #{record.isConcurrent,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mcoding.base.ui.bean.schedule.ScheduleJob" >
    update t_base_schedule_job
    <set >
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobCode != null" >
        job_code = #{jobCode,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null" >
        job_class = #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="jobMethod != null" >
        job_method = #{jobMethod,jdbcType=VARCHAR},
      </if>
      <if test="jobState != null" >
        job_state = #{jobState,jdbcType=INTEGER},
      </if>
      <if test="cronExpression != null" >
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="isConcurrent != null" >
        is_concurrent = #{isConcurrent,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mcoding.base.ui.bean.schedule.ScheduleJob" >
    update t_base_schedule_job
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_code = #{jobCode,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      job_class = #{jobClass,jdbcType=VARCHAR},
      job_method = #{jobMethod,jdbcType=VARCHAR},
      job_state = #{jobState,jdbcType=INTEGER},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=INTEGER},
      is_concurrent = #{isConcurrent,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleByPage" resultMap="BaseResultMap" parameterType="com.mcoding.base.ui.bean.schedule.ScheduleJobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_base_schedule_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>